#!/usr/bin/python3
import unittest
from models.state import State
"""
Defines State class Module.
"""


class TestUser(unittest.TestCase):
    """Unittest case for state class."""

    def test_object_Instantiation(self):
        """ instantiation class."""
        my_state = State()

    def testattr(self):
       """ Test Class Method of  State attributes."""
        my_state = State()
        self.assertTrue(hasattr(my_state, "created_at"))
        self.assertTrue(hasattr(my_state, "updated_at"))
        self.assertFalse(hasattr(my_state, "random_attr"))
        self.assertTrue(hasattr(my_state, "name"))
        self.assertTrue(hasattr(my_state, "id"))
        self.assertEqual(my_state.name, "")
        my_state.name = "WonderLand"
        self.assertEqual(my_state.name, "WonderLand")
        self.assertEqual(my_state.__class__.__name__, "State")

    def testsave(self):
        """Test Method to save."""
        my_state = State()
        my_state.save()
        self.assertTrue(hasattr(my_state, "updated_at"))

    def teststr(self):
        """Test Method__str__format of the BaseModel."""
        self.state = State()
        s = "[{}] ({}) {}".format(my_state.__class__.__name__,
                                  str(my_state.id), my_state.__dict__)
        self.assertEqual(print(s), print(my_state))

if __name__ == '__main__':
    unittest.main()
