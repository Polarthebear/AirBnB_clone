#!/usr/bin/python3
import unittest
from models.review import Review
"""
Defines unittest Module Reviwe class.
"""


class TestUser(unittest.TestCase):
    """Unittest Method for Review class."""

    def test_object_Instantiation(self):
        """instantiation class."""
        self.review = Review()

    def testattr(self):
        """Method to test Class Revies attributes."""
        my_rev = Review()
        self.assertTrue(hasattr(my_rev, "created_at"))
        self.assertTrue(hasattr(my_rev, "updated_at"))
        self.assertFalse(hasattr(my_rev, "random_attr"))
        self.assertTrue(hasattr(my_rev, "text"))
        self.assertTrue(hasattr(my_rev, "id"))
        self.assertEqual(my_rev.text, "")
        self.assertEqual(my_rev.__class__.__name__, "Review")

    def testsave(self):
        """Test Method: save."""
        my_rev= Review()
        my_rev.save()
        self.assertTrue(hasattr(my_rev, "updated_at"))

    def teststr(self):
        """Test method __str__format of BaseModel '''
        my_rev = Review()
        s = "[{}] ({}) {}".format(my_rev.__class__.__name__,
                                  str(my_rev.id), my_rev.__dict__)
        self.assertEqual(print(s), print(my_rev))

if __name__ == '__main__':
    unittest.main()
